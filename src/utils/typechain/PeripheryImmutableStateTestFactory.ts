/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import { PeripheryImmutableStateTest } from "./PeripheryImmutableStateTest";

export class PeripheryImmutableStateTestFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _factory: string,
    _WETH9: string,
    overrides?: Overrides
  ): Promise<PeripheryImmutableStateTest> {
    return super.deploy(
      _factory,
      _WETH9,
      overrides || {}
    ) as Promise<PeripheryImmutableStateTest>;
  }
  getDeployTransaction(
    _factory: string,
    _WETH9: string,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(_factory, _WETH9, overrides || {});
  }
  attach(address: string): PeripheryImmutableStateTest {
    return super.attach(address) as PeripheryImmutableStateTest;
  }
  connect(signer: Signer): PeripheryImmutableStateTestFactory {
    return super.connect(signer) as PeripheryImmutableStateTestFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PeripheryImmutableStateTest {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as PeripheryImmutableStateTest;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_factory",
        type: "address",
      },
      {
        internalType: "address",
        name: "_WETH9",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "WETH9",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "factory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60c06040523480156100115760006000fd5b50604051610218380380610218833981810160405260408110156100355760006000fd5b8101908080519060200190929190805190602001909291905050505b81815b8173ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b815260140150508073ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff1660601b815260140150505b50505b50506100d3565b60805160601c60a05160601c61011e6100fa6000398060a252508060c6525061011e6000f3fe608060405234801560105760006000fd5b506004361060365760003560e01c80634aa4a4fc14603c578063c45a015514606e576036565b60006000fd5b604260a0565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b607460c4565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000081565b7f00000000000000000000000000000000000000000000000000000000000000008156fea2646970667358221220bb961d86019c2ba177db94f09d4a62f493985b0d12db4dbe938a1f185e927cac64736f6c63430007060033";
