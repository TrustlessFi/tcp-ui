/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Lend, LendInterface } from "../Lend";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "governor",
        type: "address",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "hueCount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "lendTokenCount",
        type: "uint256",
      },
    ],
    name: "Lend",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
    ],
    name: "MintHue",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "OneToOneMintingDisabled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "paramName",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "ParameterUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "paramName",
        type: "string",
      },
      {
        indexed: true,
        internalType: "address",
        name: "value",
        type: "address",
      },
    ],
    name: "ParameterUpdatedAddress",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
    ],
    name: "ReturnHue",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "Stopped",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "hueCount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "lendTokenCount",
        type: "uint256",
      },
    ],
    name: "Unlend",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "contract IUniswapV3Pool",
        name: "pool",
        type: "address",
      },
    ],
    name: "addReferencePool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "completeSetup",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
    ],
    name: "countTokensAvailable",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    name: "currentToken",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "deployer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "governor",
    outputs: [
      {
        internalType: "contract IGovernor",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IGovernor",
        name: "_governor",
        type: "address",
      },
    ],
    name: "init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "hueCount",
        type: "uint256",
      },
    ],
    name: "lend",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "lendHue",
    outputs: [
      {
        internalType: "contract ILendHue",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxRatioOfTotalDebtAllowedPerBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "tokenToDeposit",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "hueToMint",
        type: "uint256",
      },
    ],
    name: "mintHue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "oneToOneMintedHueByBlock",
    outputs: [
      {
        internalType: "uint64",
        name: "blockNumber",
        type: "uint64",
      },
      {
        internalType: "uint192",
        name: "count",
        type: "uint192",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IUniswapV3Pool",
        name: "pool",
        type: "address",
      },
    ],
    name: "removeReferencePool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "tokenToRecieve",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "hueToReturn",
        type: "uint256",
      },
    ],
    name: "returnHue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "ratio",
        type: "uint256",
      },
    ],
    name: "setMaxRatioOfTotalDebtAllowedPerBlock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stop",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stopped",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "lendTokenCount",
        type: "uint256",
      },
    ],
    name: "unlend",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    name: "validToken",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    name: "validUpdate",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "lendTokenCount",
        type: "uint256",
      },
    ],
    name: "valueOfLendTokensInHue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052600160066000509090556706f05b59d3b20000600860005090905534801561002c5760006000fd5b505b33600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b610075565b613126806100846000396000f3fe60806040523480156100115760006000fd5b506004361061017c5760003560e01c806375f12b21116100d9578063c381c1e61161008d578063d5f3948811610067578063d5f39488146105a3578063daa8a172146105d7578063e11c8762146106265761017c565b8063c381c1e6146104a8578063c6e225d6146104ed578063d284433b146105485761017c565b806399fa1d21116100be57806399fa1d21146103fb578063a6aa57ce1461044a578063b91721b7146104795761017c565b806375f12b21146103d15780638aea8f71146103f15761017c565b8063197b1bf5116101305780632cae0269116101155780632cae0269146102fb5780635fb290cb1461032f57806365ab9699146103785761017c565b8063197b1bf51461028757806319ab453c146102b65761017c565b8063113cf1ab11610161578063113cf1ab146101c057806312172fbd14610224578063150147d7146102425761017c565b806307da68f5146101825780630c340a241461018c5761017c565b60006000fd5b61018a610669565b005b610194610689565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61020c600480360360208110156101d75760006000fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690602001909291905050506106af565b60405180821515815260200191505060405180910390f35b61022c6106d4565b6040518082815260200191505060405180910390f35b610285600480360360208110156102595760006000fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506106dd565b005b6102b46004803603602081101561029e5760006000fd5b810190808035906020019092919050505061077b565b005b6102f9600480360360208110156102cd5760006000fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610987565b005b610303610d45565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610337610d6b565b604051808367ffffffffffffffff1681526020018277ffffffffffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390f35b6103bb6004803603602081101561038f5760006000fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610db8565b6040518082815260200191505060405180910390f35b6103d9610eee565b60405180821515815260200191505060405180910390f35b6103f9610f01565b005b610448600480360360408110156104125760006000fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506110a2565b005b610477600480360360208110156104615760006000fd5b8101908080359060200190929190505050611338565b005b6104a6600480360360208110156104905760006000fd5b8101908080359060200190929190505050611694565b005b6104eb600480360360208110156104bf5760006000fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611703565b005b610530600480360360208110156105045760006000fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506117a1565b60405180821515815260200191505060405180910390f35b61058b6004803603602081101561055f5760006000fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506117c6565b60405180821515815260200191505060405180910390f35b6105ab6117eb565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610624600480360360408110156105ee5760006000fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611811565b005b6106536004803603602081101561063d5760006000fd5b8101908080359060200190929190505050611b0e565b6040518082815260200191505060405180910390f35b610677611b3c63ffffffff16565b610685611bd163ffffffff16565b5b5b565b600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600560005060205280600052604060002060009150909054906101000a900460ff1681565b60086000505481565b6106eb611b3c63ffffffff16565b6106fa81611c1b63ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff1660405180807f72656d6f76655265666572656e6365506f6f6c00000000000000000000000000815260200150601301905060405180910390207f78caada2f560033c9479d8c5e33f045f2e611faebe6b6d8a73874c80ec2dd3a260405160405180910390a35b5b50565b610789611c8e63ffffffff16565b610797611d6d63ffffffff16565b6107a960008211611dc263ffffffff16565b600033905060006107bf83611b0e63ffffffff16565b9050600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166379cc679083856040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b1580156108555760006000fd5b505af115801561086a573d600060003e3d6000fd5b50505050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b241bbac83836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b1580156109025760006000fd5b505af1158015610917573d600060003e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff167fefc56a1a7590fc4eb13cd40b6a2ceee41f3869c6ea818d20d9a18f2d6315ca188285604051808381526020018281526020019250505060405180910390a250505b5b610983611e3e63ffffffff16565b5b50565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156109e45760006000fd5b600160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905580600060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639624e83e6040518163ffffffff1660e01b815260040160206040518083038186803b158015610ab35760006000fd5b505afa158015610ac8573d600060003e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aec9190612ec6565b600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663323741746040518163ffffffff1660e01b815260040160206040518083038186803b158015610b955760006000fd5b505afa158015610baa573d600060003e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bce9190612eed565b600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d478b0876040518163ffffffff1660e01b815260040160206040518083038186803b158015610c775760006000fd5b505afa158015610c8c573d600060003e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cb09190612f14565b600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610cfe611ed263ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f908408e307fc569b417f6cbec5d5a06f44a0a505ac0479b47d421a4b2fd6a1e660405160405180910390a25b50565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600b6000508060000160009054906101000a900467ffffffffffffffff16908060000160089054906101000a900477ffffffffffffffffffffffffffffffffffffffffffffffff16905082565b600081610e19600960005060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1661202f63ffffffff16565b8273ffffffffffffffffffffffffffffffffffffffff166370a08231600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015610ea35760006000fd5b505afa158015610eb8573d600060003e3d6000fd5b505050506040513d6020811015610ecf5760006000fd5b81019080805190602001909291905050509150610ee7565b5b50919050565b600060149054906101000a900460ff1681565b610f0f611b3c63ffffffff16565b6000600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ab658be26040518163ffffffff1660e01b815260040160006040518083038186803b158015610f7a5760006000fd5b505afa158015610f8f573d600060003e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506020811015610fba5760006000fd5b8101908080516040519392919084640100000000821115610fdb5760006000fd5b83820191506020820185811115610ff25760006000fd5b82518660208202830111640100000000821117156110105760006000fd5b8083526020830192505050908051906020019060200280838360005b838110156110485780820151818401525b60208101905061102c565b5050505090500160405260200150505090506000600090505b815181101561109c5761108e828281518110151561107b57fe5b60200260200101516120ab63ffffffff16565b5b8080600101915050611061565b50505b5b565b6110b0611c8e63ffffffff16565b6110be611d6d63ffffffff16565b8161111d600960005060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1661202f63ffffffff16565b61112f60008311611dc263ffffffff16565b6000339050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166379cc679082856040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b1580156111c85760006000fd5b505af11580156111dd573d600060003e3d6000fd5b50505050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663748c03d48583611231888861217963ffffffff16565b6040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050600060405180830381600087803b1580156112a25760006000fd5b505af11580156112b7573d600060003e3d6000fd5b505050508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f11bc461b985fdc9ad2d4b71d4919bf3be8f09252f2bce978596c46b4a17b88b0856040518082815260200191505060405180910390a3505b5b505b611333611e3e63ffffffff16565b5b5050565b611346611c8e63ffffffff16565b61135461226f63ffffffff16565b61136660008211611dc263ffffffff16565b6000339050600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166380f556056040518163ffffffff1660e01b815260040160206040518083038186803b1580156113d45760006000fd5b505afa1580156113e9573d600060003e3d6000fd5b505050506040513d60208110156114005760006000fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff1663a6afed956040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156114595760006000fd5b505af115801561146e573d600060003e3d6000fd5b50505050600061149461148561236463ffffffff16565b846124fd90919063ffffffff16565b9050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632c73f09e846040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b15801561150c5760006000fd5b505af1158015611521573d600060003e3d6000fd5b5050505061157b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1683600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168661252363ffffffff16565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663449a52f883836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b15801561160f5760006000fd5b505af1158015611624573d600060003e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff167f8fff79b574da9a93d7a5408c2fc00c4a9b2b462321c1659b2fbbb9ff3dd221ff8483604051808381526020018281526020019250505060405180910390a250505b5b611690611e3e63ffffffff16565b5b50565b6116a2611b3c63ffffffff16565b80600860005081909090555060405180806130cf60229139602201905060405180910390207f3a64504f0bc0c335e2aecb78638a257e0351a3fe0370861fd54ee4190b920933826040518082815260200191505060405180910390a25b5b50565b611711611b3c63ffffffff16565b611720816120ab63ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff1660405180807f6164645265666572656e6365506f6f6c00000000000000000000000000000000815260200150601001905060405180910390207f78caada2f560033c9479d8c5e33f045f2e611faebe6b6d8a73874c80ec2dd3a260405160405180910390a35b5b50565b600960005060205280600052604060002060009150909054906101000a900460ff1681565b600a60005060205280600052604060002060009150909054906101000a900460ff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61181f611c8e63ffffffff16565b61182d61226f63ffffffff16565b60038060ff16600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663055ad42e6040518163ffffffff1660e01b815260040160206040518083038186803b15801561189c5760006000fd5b505afa1580156118b1573d600060003e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118d59190612f3b565b60ff1610151561191a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161191190612fa8565b60405180910390fd5b82611979600a60005060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1661202f63ffffffff16565b61198b60008411611dc263ffffffff16565b61199a8361274e63ffffffff16565b60003390506119e28582600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166119d7898961217963ffffffff16565b61252363ffffffff16565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663449a52f882866040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b158015611a765760006000fd5b505af1158015611a8b573d600060003e3d6000fd5b505050508473ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f84bae4eb493c024d0c8e7a02aadbf207b30a57059d1d92ee7e82708836fd8277866040518082815260200191505060405180910390a3505b5b505b505b611b09611e3e63ffffffff16565b5b5050565b6000611b30611b2161236463ffffffff16565b836128c690919063ffffffff16565b9050611b37565b919050565b600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611bce576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611bc590612fe7565b60405180910390fd5b5b565b6001600060146101000a81548160ff0219169083151502179055507f7acc84e34091ae817647a4c49116f5cc07f319078ba80f8f5fde37ea7e25cbd660405160405180910390a15b565b6000611c2c826128ec63ffffffff16565b90506000600a60005060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550505b50565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e97dcb626040518163ffffffff1660e01b8152600401600060405180830381600087803b158015611cf95760006000fd5b505af1158015611d0e573d600060003e3d6000fd5b50505050600260066000505414151515611d5d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d5490613026565b60405180910390fd5b600260066000508190909055505b565b600060149054906101000a900460ff16151515611dbf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611db690613065565b60405180910390fd5b5b565b801515611e3a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260048152602001807f4e6f6f700000000000000000000000000000000000000000000000000000000081526020015060200191505060405180910390fd5b5b50565b60016006600050819090905550600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e9fad8ee6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015611eb65760006000fd5b505af1158015611ecb573d600060003e3d6000fd5b505050505b565b600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632cae02696040518163ffffffff1660e01b815260040160206040518083038186803b158015611f3b5760006000fd5b505afa158015611f50573d600060003e3d6000fd5b505050506040513d6020811015611f675760006000fd5b8101908080519060200190929190505050600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060016005600050600063b91721b760e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff0219169083151502179055505b565b8015156120a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f496e76616c696420746f6b656e0000000000000000000000000000000000000081526020015060200191505060405180910390fd5b5b50565b60006120bc826128ec63ffffffff16565b90506001600a60005060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506001600960005060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550505b50565b600060008373ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156121c45760006000fd5b505afa1580156121d9573d600060003e3d6000fd5b505050506040513d60208110156121f05760006000fd5b81019080805190602001909291905050509050601260ff168160ff16141561221b5782915050612269565b601260ff168160ff1611612243578060120360ff16600a0a8381151561223d57fe5b04612260565b61225f6012820360ff16600a0a84612b3990919063ffffffff16565b5b91505061226956505b92915050565b61227d611d6d63ffffffff16565b600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bf86d6906040518163ffffffff1660e01b815260040160206040518083038186803b1580156122e65760006000fd5b505afa1580156122fb573d600060003e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061231f9190612e99565b151515612361576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161235890612f69565b60405180910390fd5b5b565b60006000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637f250c616040518163ffffffff1660e01b815260040160206040518083038186803b1580156123d15760006000fd5b505afa1580156123e6573d600060003e3d6000fd5b505050506040513d60208110156123fd5760006000fd5b810190808051906020019092919050505090506000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561247b5760006000fd5b505afa158015612490573d600060003e3d6000fd5b505050506040513d60208110156124a75760006000fd5b8101908080519060200190929190505050905060008114806124c95750600082145b6124e5576124e082826128c690919063ffffffff16565b6124ef565b670de0b6b3a76400005b925050506124fa5650505b90565b60006125188383670de0b6b3a7640000612bd763ffffffff16565b905080505b92915050565b600060008573ffffffffffffffffffffffffffffffffffffffff166323b872dd60e01b868686604051602401808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040518082805190602001908083835b60208310151561262657805182525b602082019150602081019050602083039250612600565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114612688576040519150601f19603f3d011682016040523d82523d6000602084013e61268d565b606091505b50915091508180156126ce57506000815114806126cd57508080602001905160208110156126bb5760006000fd5b81019080805190602001909291905050505b5b1515612745576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260038152602001807f535446000000000000000000000000000000000000000000000000000000000081526020015060200191505060405180910390fd5b50505b50505050565b600043600b60005060000160009054906101000a900467ffffffffffffffff1667ffffffffffffffff16106127db576127d6600b60005060000160089054906101000a900477ffffffffffffffffffffffffffffffffffffffffffffffff1677ffffffffffffffffffffffffffffffffffffffffffffffff1683612cd890919063ffffffff16565b6127dd565b815b905060405180604001604052806127fb43612d61909063ffffffff16565b67ffffffffffffffff16815260200161281b83612df3909063ffffffff16565b77ffffffffffffffffffffffffffffffffffffffffffffffff16815260200150600b60005060008201518160000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060208201518160000160086101000a81548177ffffffffffffffffffffffffffffffffffffffffffffffff021916908377ffffffffffffffffffffffffffffffffffffffffffffffff160217905550905050505b50565b60006128e183670de0b6b3a764000084612bd763ffffffff16565b905080505b92915050565b600060008273ffffffffffffffffffffffffffffffffffffffff16630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b1580156129375760006000fd5b505afa15801561294c573d600060003e3d6000fd5b505050506040513d60208110156129635760006000fd5b8101908080519060200190929190505050905060008373ffffffffffffffffffffffffffffffffffffffff1663d21220a76040518163ffffffff1660e01b815260040160206040518083038186803b1580156129bf5760006000fd5b505afa1580156129d4573d600060003e3d6000fd5b505050506040513d60208110156129eb5760006000fd5b81019080805190602001909291905050509050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515612b285781818093508192505050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515612b27576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600b8152602001807f4d697373696e672068756500000000000000000000000000000000000000000081526020015060200191505060405180910390fd5b5b8092505050612b345650505b919050565b60006000821480612b5957508282838502925082811515612b5657fe5b04145b1515612bd0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600c8152602001807f6d756c2d6f766572666c6f77000000000000000000000000000000000000000081526020015060200191505060405180910390fd5b5b92915050565b6000600060006000198587098587029250828110838203039150506000811415612c1a57600084111515612c0b5760006000fd5b83820492508292505050612cd1565b8084111515612c295760006000fd5b6000848688099050828111820391508083039250600085866000031690508086049550808404935060018182600003040190508083028417935083506000600287600302189050808702600203810290508050808702600203810290508050808702600203810290508050808702600203810290508050808702600203810290508050808702600203810290508050808502955085508595505050505050612cd15650505050505b9392505050565b60008282840191508110151515612d5a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600c8152602001807f6164642d6f766572666c6f77000000000000000000000000000000000000000081526020015060200191505060405180910390fd5b5b92915050565b60006801000000000000000082101515612de6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6d6f7265207468616e203634206269747300000000000000000000000000000081526020015060200191505060405180910390fd5b819050612dee565b919050565b6000780100000000000000000000000000000000000000000000000082101515612e88576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f6d6f7265207468616e203139322062697473000000000000000000000000000081526020015060200191505060405180910390fd5b819050612e90565b919050566130cd565b600060208284031215612eaa578081fd5b815180151581141515612ebb578182fd5b809150505b92915050565b600060208284031215612ed7578081fd5b8151612ee2816130a4565b809150505b92915050565b600060208284031215612efe578081fd5b8151612f09816130a4565b809150505b92915050565b600060208284031215612f25578081fd5b8151612f30816130a4565b809150505b92915050565b600060208284031215612f4c578081fd5b815160ff811681141515612f5e578182fd5b809150505b92915050565b600060208252601160208301527f50726f746f636f6c2073687574646f776e00000000000000000000000000000060408301526060820190505b919050565b600060208252601460208301527f416374696f6e2077696e646f772070617373656400000000000000000000000060408301526060820190505b919050565b600060208252600e60208301527f4e6f7420417574686f72697a656400000000000000000000000000000000000060408301526060820190505b919050565b600060208252600d60208301527f4c50205265656e7472616e63790000000000000000000000000000000000000060408301526060820190505b919050565b600060208252601360208301527f436f6e74726163742069732073746f707065640000000000000000000000000060408301526060820190505b919050565b73ffffffffffffffffffffffffffffffffffffffff8116811415156130c95760006000fd5b5b50565bfe6d6178526174696f4f66546f74616c44656274416c6c6f776564506572426c6f636ba26469706673582212203ecf3a367173bf0136ceb73e1cd2824ee8d7788d9f07eb4d1f0c5f365c0c476464736f6c63430007060033";

export class Lend__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Lend> {
    return super.deploy(overrides || {}) as Promise<Lend>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Lend {
    return super.attach(address) as Lend;
  }
  connect(signer: Signer): Lend__factory {
    return super.connect(signer) as Lend__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LendInterface {
    return new utils.Interface(_abi) as LendInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Lend {
    return new Contract(address, _abi, signerOrProvider) as Lend;
  }
}
