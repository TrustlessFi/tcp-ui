/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TcpMulticallViewOnly,
  TcpMulticallViewOnlyInterface,
} from "../TcpMulticallViewOnly";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
        ],
        internalType: "struct TcpMulticall.Call[]",
        name: "calls",
        type: "tuple[]",
      },
    ],
    name: "all",
    outputs: [
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
      {
        internalType: "bytes[]",
        name: "returnData",
        type: "bytes[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156100115760006000fd5b50610017565b61020c806100266000396000f3fe60806040523480156100115760006000fd5b50600436106100305760003560e01c80638f1316d51461003657610030565b60006000fd5b610050600480360381019061004b9190610077565b610067565b60405161005e9291906100ec565b60405180910390f35b600060605b9250929050566101d5565b600060006020838503121561008a578182fd5b823567ffffffffffffffff808211156100a1578384fd5b818501915085601f83011215156100b6578384fd5b8135818111156100c4578485fd5b8660206020830285010111156100d8578485fd5b6020830194508093505050505b9250929050565b600060408201848352602060408185015281855180845260608601915060608382028701019350828701855b828110156101c4577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa088870301845281518051808852885b8181101561016f5787818401015188828b0101525b8781019050610150565b8181111561017f578988838b0101525b50867fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011689010197505050848201915084840193505b600181019050610118565b5050505050809150505b9392505050565bfea26469706673582212205afa537761db4edd349431606cdc6969c15858310017fcbec9a620a75591ab6164736f6c63430007060033";

export class TcpMulticallViewOnly__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TcpMulticallViewOnly> {
    return super.deploy(overrides || {}) as Promise<TcpMulticallViewOnly>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TcpMulticallViewOnly {
    return super.attach(address) as TcpMulticallViewOnly;
  }
  connect(signer: Signer): TcpMulticallViewOnly__factory {
    return super.connect(signer) as TcpMulticallViewOnly__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TcpMulticallViewOnlyInterface {
    return new utils.Interface(_abi) as TcpMulticallViewOnlyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TcpMulticallViewOnly {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as TcpMulticallViewOnly;
  }
}
