/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  CommunityAllocation,
  CommunityAllocationInterface,
} from "../CommunityAllocation";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenMinter",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "guardian",
        type: "address",
      },
    ],
    name: "ArbitraryMintingAbdicated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "dest",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
    ],
    name: "IncentiveDistributed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newGuardian",
        type: "address",
      },
    ],
    name: "NewGuardian",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint8",
        name: "lockDurationMonths",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
    ],
    name: "TokensLocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
    ],
    name: "TokensMintedArbitrarily",
    type: "event",
  },
  {
    inputs: [],
    name: "abdicateArbitraryMinting",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "canMintArbitrarily",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "lockDurationMonths",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "createLockPosition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "dao",
    outputs: [
      {
        internalType: "contract ITokenLockDao",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "guardian",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
    ],
    name: "mintArbitrarily",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingGuardian",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "recieveGuardianship",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ITokenLockDao",
        name: "_dao",
        type: "address",
      },
    ],
    name: "setDao",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenMinter",
    outputs: [
      {
        internalType: "contract ITokenIncentiveMinter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newGuardian",
        type: "address",
      },
    ],
    name: "transferGuardianship",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c06040526001600260146101000a81548160ff02191690831515021790555034801561002c5760006000fd5b5060405161138e38038061138e833981810160405260408110156100505760006000fd5b8101908080519060200190929190805190602001909291905050505b81815b8173ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b815260140150508073ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff1660601b815260140150506100f2336100fd60201b60201c565b5b50505b5050610185565b80600060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167fb6182387b7ea948602a7e04e662a27ce251dc3dd014eacaed10dce36b41bf1a560405160405180910390a25b50565b60805160601c60a05160601c6111d16101bd600039806107dc5280610c4f5280610fb8525080610b4b52806110ed52506111d16000f3fe60806040523480156100115760006000fd5b50600436106100d95760003560e01c80639585ac8911610082578063cfb3647b1161005c578063cfb3647b14610288578063ef7b550b146102bc578063fc0c546a14610318576100d9565b80639585ac89146101d45780639cef4240146101f4578063a3a8902e14610239576100d9565b8063452a9320116100b3578063452a9320146101275780636637b8821461015b578063762c31ba146101a0576100d9565b80632a203de7146100df5780633d2ec400146100e95780634162169f146100f3576100d9565b60006000fd5b6100e761034c565b005b6100f1610498565b005b6100fb6105b9565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61012f6105df565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61019e600480360360208110156101725760006000fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610605565b005b6101a861084f565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101dc610875565b60405180821515815260200191505060405180910390f35b6102376004803603602081101561020b5760006000fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610888565b005b610286600480360360408110156102505760006000fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610996565b005b610290610b49565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610316600480360360608110156102d35760006000fd5b8101908080359060200190929190803560ff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610b6d565b005b610320610c4d565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610414576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f4e6f7420417574686f72697a656400000000000000000000000000000000000081526020015060200191505060405180910390fd5b6000600260146101000a81548160ff021916908315150217905550600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f85f5ecd6aaf63c5f43fea7e23239531abea70003ead191ebc6cd9b9042856cba60405160405180910390a25b5b565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610560576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f4e6f7420417574686f72697a656400000000000000000000000000000000000081526020015060200191505060405180910390fd5b610591600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610c7163ffffffff16565b600160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690555b565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156106cd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f4e6f7420417574686f72697a656400000000000000000000000000000000000081526020015060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515610796576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600b8152602001807f416c72656164792073657400000000000000000000000000000000000000000081526020015060200191505060405180910390fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061084a7f0000000000000000000000000000000000000000000000000000000000000000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff167fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff610cf963ffffffff16565b5b5b50565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260149054906101000a900460ff1681565b600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610950576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f4e6f7420417574686f72697a656400000000000000000000000000000000000081526020015060200191505060405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b5b50565b600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610a5e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f4e6f7420417574686f72697a656400000000000000000000000000000000000081526020015060200191505060405180910390fd5b600260149054906101000a900460ff161515610ae5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260098152602001807f416264696361746564000000000000000000000000000000000000000000000081526020015060200191505060405180910390fd5b610af58282610f0563ffffffff16565b8173ffffffffffffffffffffffffffffffffffffffff167ff777a3d0b1f66c7e8e2c312d197c0bdc5bc67e82d0b9c54d757898ee3b64089c826040518082815260200191505060405180910390a25b5b5050565b7f000000000000000000000000000000000000000000000000000000000000000081565b600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610c35576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f4e6f7420417574686f72697a656400000000000000000000000000000000000081526020015060200191505060405180910390fd5b610c46838383610f6863ffffffff16565b5b5b505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b80600060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167fb6182387b7ea948602a7e04e662a27ce251dc3dd014eacaed10dce36b41bf1a560405160405180910390a25b50565b600060008473ffffffffffffffffffffffffffffffffffffffff1663095ea7b360e01b8585604051602401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040518082805190602001908083835b602083101515610dde57805182525b602082019150602081019050602083039250610db8565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114610e40576040519150601f19603f3d011682016040523d82523d6000602084013e610e45565b606091505b5091509150818015610e865750600081511480610e855750808060200190516020811015610e735760006000fd5b81019080805190602001909291905050505b5b1515610efd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260028152602001807f534100000000000000000000000000000000000000000000000000000000000081526020015060200191505060405180910390fd5b50505b505050565b610f1582826110eb63ffffffff16565b8173ffffffffffffffffffffffffffffffffffffffff167faf2b23cbaeeb4ac51eb45799ad2661590f109d149e349e2c1b8a89b769c46846826040518082815260200191505060405180910390a25b5050565b610f7830846110eb63ffffffff16565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166327fb04747f00000000000000000000000000000000000000000000000000000000000000008585856040518563ffffffff1660e01b8152600401808573ffffffffffffffffffffffffffffffffffffffff1681526020018481526020018360ff1681526020018273ffffffffffffffffffffffffffffffffffffffff168152602001945050505050602060405180830381600087803b1580156110555760006000fd5b505af115801561106a573d600060003e3d6000fd5b505050506040513d60208110156110815760006000fd5b8101908080519060200190929190505050508160ff168173ffffffffffffffffffffffffffffffffffffffff167f603b80bf3fe3620c8b3029a98c48ed6d0a750f155cd9ad74e5a33637b6e27612856040518082815260200191505060405180910390a35b505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16634cd7a31583836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b15801561117d5760006000fd5b505af1158015611192573d600060003e3d6000fd5b505050505b505056fea2646970667358221220b37f126d7d4ca836e2f0e1114cdf2a4661de7ab048103be70cd628126632a86364736f6c63430007060033";

export class CommunityAllocation__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    tokenMinter: string,
    token: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CommunityAllocation> {
    return super.deploy(
      tokenMinter,
      token,
      overrides || {}
    ) as Promise<CommunityAllocation>;
  }
  getDeployTransaction(
    tokenMinter: string,
    token: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(tokenMinter, token, overrides || {});
  }
  attach(address: string): CommunityAllocation {
    return super.attach(address) as CommunityAllocation;
  }
  connect(signer: Signer): CommunityAllocation__factory {
    return super.connect(signer) as CommunityAllocation__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CommunityAllocationInterface {
    return new utils.Interface(_abi) as CommunityAllocationInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CommunityAllocation {
    return new Contract(address, _abi, signerOrProvider) as CommunityAllocation;
  }
}
