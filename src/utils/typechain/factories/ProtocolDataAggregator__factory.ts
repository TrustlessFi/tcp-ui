/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ProtocolDataAggregator,
  ProtocolDataAggregatorInterface,
} from "../ProtocolDataAggregator";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IGovernor",
        name: "_governor",
        type: "address",
      },
      {
        internalType: "contract INonfungiblePositionManager",
        name: "_nftPositionManager",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint160",
        name: "sqrtPriceX96",
        type: "uint160",
      },
    ],
    name: "convertSqrtPriceX96ToTick",
    outputs: [
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int24",
        name: "tick",
        type: "int24",
      },
    ],
    name: "convertTickToSqrtPriceX96",
    outputs: [
      {
        internalType: "uint160",
        name: "",
        type: "uint160",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getIncentivizedPools",
    outputs: [
      {
        components: [
          {
            internalType: "contract IUniswapV3Pool",
            name: "pool",
            type: "address",
          },
          {
            internalType: "uint64",
            name: "rewardsPortion",
            type: "uint64",
          },
        ],
        internalType: "struct IRewards.PoolConfig[]",
        name: "poolConfigs",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "start",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "end",
        type: "uint32",
      },
    ],
    name: "getLockedNFTIDs",
    outputs: [
      {
        internalType: "uint256[]",
        name: "nftIDs",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "nftIDs",
        type: "uint256[]",
      },
    ],
    name: "getUniswapPositionTickStatuses",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
          {
            internalType: "int24",
            name: "tickLower",
            type: "int24",
          },
          {
            internalType: "int24",
            name: "tickUpper",
            type: "int24",
          },
        ],
        internalType: "struct ProtocolDataAggregator.NftPositionTickStatus[]",
        name: "tickStatuses",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "governor",
    outputs: [
      {
        internalType: "contract IGovernor",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nftPositionManager",
    outputs: [
      {
        internalType: "contract INonfungiblePositionManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64[]",
        name: "positionIDs",
        type: "uint64[]",
      },
    ],
    name: "positionsCollateralization",
    outputs: [
      {
        internalType: "uint256[]",
        name: "collateralizations",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052348015620000125760006000fd5b5060405162001e9638038062001e968339818101604052810190620000389190620000c9565b5b81600060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b5050620001285662000127565b6000600060408385031215620000dd578182fd5b8251620000ea816200010a565b809250506020830151620000fe816200010a565b809150505b9250929050565b6001600160a01b03811681141515620001235760006000fd5b5b50565b5b611d5e80620001386000396000f3fe60806040523480156100115760006000fd5b506004361061008d5760003560e01c8063a04ebaec1161005c578063a04ebaec1461012f578063adc7f3011461015f578063bd2699e31461017d578063d423b073146101ad5761008d565b80630c340a241461009357806321da34af146100b15780635e016b90146100e157806384397888146101115761008d565b60006000fd5b61009b6101dd565b6040516100a89190611bac565b60405180910390f35b6100cb60048036038101906100c6919061162b565b610203565b6040516100d89190611a40565b60405180910390f35b6100fb60048036038101906100f691906116cf565b61041a565b6040516101089190611b5e565b60405180910390f35b610119610625565b6040516101269190611bd4565b60405180910390f35b610149600480360381019061014491906118ed565b61064b565b6040516101569190611b5e565b60405180910390f35b610167610861565b6040516101749190611ae3565b60405180910390f35b610197600480360381019061019291906117cc565b610add565b6040516101a49190611c11565b60405180910390f35b6101c760048036038101906101c29190611855565b610afa565b6040516101d49190611bfc565b60405180910390f35b600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60606000825190508067ffffffffffffffff811180156102235760006000fd5b5060405190808252806020026020018201604052801561025d57816020015b61024a6114e9565b8152602001906001900390816102425790505b5091508150600060006000600060006000600090505b8681101561040057600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166399fbab888a838151811015156102c757fe5b60200260200101516040518263ffffffff1660e01b81526004016102eb9190611c4f565b6101806040518083038186803b1580156103055760006000fd5b505afa15801561031a573d600060003e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061033e9190611921565b909192939495969798999a509091929394959697989950909192935090919250909150905050809650819750829850839950849a5050505050506040518060a001604052808773ffffffffffffffffffffffffffffffffffffffff1681526020018673ffffffffffffffffffffffffffffffffffffffff1681526020018562ffffff1681526020018460020b81526020018360020b81526020015088828151811015156103e757fe5b60200260200101819052505b8080600101915050610273565b50869650505050505050610415565050505050505b919050565b60606000825190508067ffffffffffffffff8111801561043a5760006000fd5b506040519080825280602002602001820160405280156104695781602001602082028036833780820191505090505b50915081506000600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639624e83e6040518163ffffffff1660e01b815260040160206040518083038186803b1580156104d95760006000fd5b505afa1580156104ee573d600060003e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610512919061177e565b9050600060006000600090505b8481101561060f578373ffffffffffffffffffffffffffffffffffffffff16636594da9f888381518110151561055157fe5b60200260200101516040518263ffffffff1660e01b81526004016105759190611c61565b60406040518083038186803b15801561058e5760006000fd5b505afa1580156105a3573d600060003e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105c791906118c7565b80935081945050506105e28383610b1790919063ffffffff16565b86828151811015156105f057fe5b60200260200101909081815260200150505b808060010191505061051f565b508494505050505061062056505050505b919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60608163ffffffff168363ffffffff161015156106685760006000fd5b82820363ffffffff1667ffffffffffffffff811180156106885760006000fd5b506040519080825280602002602001820160405280156106b75781602001602082028036833780820191505090505b50905080506000600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639624e83e6040518163ffffffff1660e01b815260040160206040518083038186803b1580156107275760006000fd5b505afa15801561073c573d600060003e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610760919061177e565b905060005b8363ffffffff168563ffffffff16101561085857600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632f745c5983878060010198506040518363ffffffff1660e01b81526004016107dc929190611a0b565b60206040518083038186803b1580156107f55760006000fd5b505afa15801561080a573d600060003e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061082e91906118ab565b838280600101935081518110151561084257fe5b6020026020010190908181526020015050610765565b50505b92915050565b60606000600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639ec5a8946040518163ffffffff1660e01b815260040160206040518083038186803b1580156108ce5760006000fd5b505afa1580156108e3573d600060003e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061090791906117a5565b905060008173ffffffffffffffffffffffffffffffffffffffff16636fcdfed66040518163ffffffff1660e01b815260040160206040518083038186803b1580156109525760006000fd5b505afa158015610967573d600060003e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061098b919061187c565b61ffff16905060008114156109a8578292505050610ada56610a00565b8067ffffffffffffffff811180156109c05760006000fd5b506040519080825280602002602001820160405280156109fa57816020015b6109e7611552565b8152602001906001900390816109df5790505b50925082505b6000600190505b818161ffff16111515610acd578273ffffffffffffffffffffffffffffffffffffffff1663fbff7efd826040518263ffffffff1660e01b8152600401610a4d9190611c39565b60406040518083038186803b158015610a665760006000fd5b505afa158015610a7b573d600060003e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a9f91906117f3565b846001830361ffff16815181101515610ab457fe5b60200260200101819052505b8080600101915050610a07565b508292505050610ada5650505b90565b6000610aee82610b3d63ffffffff16565b9050610af5565b919050565b6000610b0b82610fd463ffffffff16565b9050610b12565b919050565b6000610b3283670de0b6b3a7640000846113e863ffffffff16565b905080505b92915050565b6000600060008360020b12610b55578260020b610b5d565b8260020b6000035b90507ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2761860000360020b8111151515610c00576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260018152602001807f540000000000000000000000000000000000000000000000000000000000000081526020015060200191505060405180910390fd5b60006000600183161415610c2557700100000000000000000000000000000000610c37565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff169050600060028316141515610c755760806ffff97272373d413259a46990580e213a8202901c905080505b600060048316141515610c9e5760806ffff2e50f5f656932ef12357cf3c7fdcc8202901c905080505b600060088316141515610cc75760806fffe5caca7e10e4e61c3624eaa0941cd08202901c905080505b600060108316141515610cf05760806fffcb9843d60f6159c9db58835c9266448202901c905080505b600060208316141515610d195760806fff973b41fa98c081472e6896dfb254c08202901c905080505b600060408316141515610d425760806fff2ea16466c96a3843ec78b326b528618202901c905080505b600060808316141515610d6b5760806ffe5dee046a99a2a811c461f1969c30538202901c905080505b60006101008316141515610d955760806ffcbe86c7900a88aedcffc83b479aa3a48202901c905080505b60006102008316141515610dbf5760806ff987a7253ac413176f2b074cf7815e548202901c905080505b60006104008316141515610de95760806ff3392b0822b70005940c7a398e4b70f38202901c905080505b60006108008316141515610e135760806fe7159475a2c29b7443b29c7fa6e889d98202901c905080505b60006110008316141515610e3d5760806fd097f3bdfd2022b8845ad8f792aa58258202901c905080505b60006120008316141515610e675760806fa9f746462d870fdf8a65dc1f90e061e58202901c905080505b60006140008316141515610e915760806f70d869a156d2a1b890bb3df62baf32f78202901c905080505b60006180008316141515610ebb5760806f31be135f97d08fd981231505542fcfa68202901c905080505b6000620100008316141515610ee65760806f09aa508b5b7a84e1c677de54f3e99bc98202901c905080505b6000620200008316141515610f105760806e5d6af8dedb81196699c329225ee6048202901c905080505b6000620400008316141515610f395760806d2216e584f5fa1ea926041bedfe988202901c905080505b6000620800008316141515610f605760806b048a170391f7dc42444e8fa28202901c905080505b60008460020b1315610f9d57807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811515610f9757fe5b04905080505b600064010000000082811515610faf57fe5b0614610fbc576001610fbf565b60005b60ff16602082901c019250825050505b919050565b60006401000276a373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1610158015611056575073fffd8963efd1fc6a506488495d951d5263988d2673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16105b15156110cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260018152602001807f520000000000000000000000000000000000000000000000000000000000000081526020015060200191505060405180910390fd5b600060208373ffffffffffffffffffffffffffffffffffffffff16901b905060008190506000600090506fffffffffffffffffffffffffffffffff821160071b808217915082811c92505067ffffffffffffffff821160061b808217915082811c92505063ffffffff821160051b808217915082811c92505061ffff821160041b808217915082811c92505060ff821160031b808217915082811c925050600f821160021b808217915082811c9250506003821160011b808217915082811c925050600182118082179150506080811015156111b357607f810383901c915081506111bf565b80607f0383901b915081505b6000604060808303901b9050828302607f1c92508260801c80603f1b8217915083811c935050828302607f1c92508260801c80603e1b8217915083811c935050828302607f1c92508260801c80603d1b8217915083811c935050828302607f1c92508260801c80603c1b8217915083811c935050828302607f1c92508260801c80603b1b8217915083811c935050828302607f1c92508260801c80603a1b8217915083811c935050828302607f1c92508260801c8060391b8217915083811c935050828302607f1c92508260801c8060381b8217915083811c935050828302607f1c92508260801c8060371b8217915083811c935050828302607f1c92508260801c8060361b8217915083811c935050828302607f1c92508260801c8060351b8217915083811c935050828302607f1c92508260801c8060341b8217915083811c935050828302607f1c92508260801c8060331b8217915083811c935050828302607f1c92508260801c8060321b82179150506000693627a301d71055774c8582029050600060806f028f6481ab7f045a5af012a19d003aaa8303901d9050600060806fdb2df09e81959a81455e260799a0632f8401901d90508060020b8260020b146113d5578873ffffffffffffffffffffffffffffffffffffffff166113ac82610b3d63ffffffff16565b73ffffffffffffffffffffffffffffffffffffffff1611156113ce57816113d0565b805b6113d7565b815b97508750505050505050505b919050565b600060006000600019858709858702925082811083820303915050600081141561142b5760008411151561141c5760006000fd5b838204925082925050506114e2565b808411151561143a5760006000fd5b60008486880990508281118203915080830392506000858660000316905080860495508084049350600181826000030401905080830284179350835060006002876003021890508087026002038102905080508087026002038102905080508087026002038102905080508087026002038102905080508087026002038102905080508087026002038102905080508085029550855085955050505050506114e25650505050505b9392505050565b6040518060a00160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600062ffffff168152602001600060020b8152602001600060020b81526020015090565b6040518060400160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600067ffffffffffffffff168152602001509056611d27565b6000815190506115a281611ccb565b5b919050565b6000815190506115b781611cf4565b5b919050565b6000815190506fffffffffffffffffffffffffffffffff8116811415156115e45760006000fd5b5b919050565b60008151905062ffffff8116811415156116045760006000fd5b5b919050565b60008135905063ffffffff8116811415156116255760006000fd5b5b919050565b6000602080838503121561163d578182fd5b823567ffffffffffffffff811115611653578283fd5b808401905084601f8201121515611668578283fd5b803561167b61167682611ca8565b611c7d565b80828252848201915084840188868786028701011115611699578687fd5b8694505b838510156116bf5780358352858301925085810190505b60018501945061169d565b5080955050505050505b92915050565b600060208083850312156116e1578182fd5b823567ffffffffffffffff8111156116f7578283fd5b808401905084601f820112151561170c578283fd5b803561171f61171a82611ca8565b611c7d565b8082825284820191508484018886878602870101111561173d578687fd5b8694505b8385101561176e57803561175481611d0a565b80845250858301925085810190505b600185019450611741565b5080955050505050505b92915050565b60006020828403121561178f578081fd5b815161179a81611ccb565b809150505b92915050565b6000602082840312156117b6578081fd5b81516117c181611ccb565b809150505b92915050565b6000602082840312156117dd578081fd5b81356117e881611cf4565b809150505b92915050565b600060408284031215611804578081fd5b6040516040810181811067ffffffffffffffff8211171561182157fe5b8060405250825161183181611ccb565b80825250602083015161184381611d0a565b80602083015250809150505b92915050565b600060208284031215611866578081fd5b813561187181611ccb565b809150505b92915050565b60006020828403121561188d578081fd5b815161ffff8116811415156118a0578182fd5b809150505b92915050565b6000602082840312156118bc578081fd5b815190505b92915050565b60006000604083850312156118da578081fd5b82519150602083015190505b9250929050565b6000600060408385031215611900578182fd5b6119098361160a565b91506119176020840161160a565b90505b9250929050565b6000600060006000600060006000600060006000600060006101808d8f031215611949578788fd5b8c516bffffffffffffffffffffffff811681141515611966578889fd5b809c505061197660208e01611593565b9a5061198460408e01611593565b995061199260608e01611593565b98506119a060808e016115ea565b97506119ae60a08e016115a8565b96506119bc60c08e016115a8565b95506119ca60e08e016115bd565b94506101008d015193506101208d015192506119e96101408e016115bd565b91506119f86101608e016115bd565b90505b9295989b509295989b509295989b565b600060408201905073ffffffffffffffffffffffffffffffffffffffff8416825263ffffffff831660208301525b9392505050565b60006020808301818452808551808352604092508286019150838701855b82811015611ad357815173ffffffffffffffffffffffffffffffffffffffff808251168652808883015116888701525062ffffff868201511686860152606080820151600281810b838901526080925082840151810b838901525050505060a08401935085820191505b600181019050611a5e565b5050508093505050505b92915050565b60006020808301818452808551808352604092508286019150838701855b82811015611b4e57815173ffffffffffffffffffffffffffffffffffffffff815116855267ffffffffffffffff87820151168786015250848401935085820191505b600181019050611b01565b5050508093505050505b92915050565b600060208083018184528085518083526040860191508387019250845b81811015611b9d5783518352848301925084840193505b600181019050611b7b565b50508093505050505b92915050565b600060208201905073ffffffffffffffffffffffffffffffffffffffff831682525b92915050565b600060208201905073ffffffffffffffffffffffffffffffffffffffff831682525b92915050565b60006020820190508260020b82525b92915050565b600060208201905073ffffffffffffffffffffffffffffffffffffffff831682525b92915050565b600060208201905061ffff831682525b92915050565b60006020820190508282525b92915050565b600060208201905067ffffffffffffffff831682525b92915050565b6000604051905081810181811067ffffffffffffffff82111715611c9d57fe5b80604052505b919050565b600067ffffffffffffffff821115611cbc57fe5b6020602083020190505b919050565b73ffffffffffffffffffffffffffffffffffffffff811681141515611cf05760006000fd5b5b50565b8060020b81141515611d065760006000fd5b5b50565b67ffffffffffffffff811681141515611d235760006000fd5b5b50565bfea2646970667358221220f4ac1309e20916905c86429b72fb6e9c3002382b1e7dd88ee7884cbcd4a810aa64736f6c63430007060033";

export class ProtocolDataAggregator__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _governor: string,
    _nftPositionManager: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ProtocolDataAggregator> {
    return super.deploy(
      _governor,
      _nftPositionManager,
      overrides || {}
    ) as Promise<ProtocolDataAggregator>;
  }
  getDeployTransaction(
    _governor: string,
    _nftPositionManager: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _governor,
      _nftPositionManager,
      overrides || {}
    );
  }
  attach(address: string): ProtocolDataAggregator {
    return super.attach(address) as ProtocolDataAggregator;
  }
  connect(signer: Signer): ProtocolDataAggregator__factory {
    return super.connect(signer) as ProtocolDataAggregator__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ProtocolDataAggregatorInterface {
    return new utils.Interface(_abi) as ProtocolDataAggregatorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ProtocolDataAggregator {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ProtocolDataAggregator;
  }
}
