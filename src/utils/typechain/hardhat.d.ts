/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "ERC20Permit",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20Permit__factory>;
    getContractFactory(
      name: "IERC20Permit",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Permit__factory>;
    getContractFactory(
      name: "ERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "ERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721__factory>;
    getContractFactory(
      name: "IERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721__factory>;
    getContractFactory(
      name: "IERC721Enumerable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Enumerable__factory>;
    getContractFactory(
      name: "IERC721Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Metadata__factory>;
    getContractFactory(
      name: "IERC721Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Receiver__factory>;
    getContractFactory(
      name: "IUniswapV2Pair",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV2Pair__factory>;
    getContractFactory(
      name: "IUniswapV3MintCallback",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV3MintCallback__factory>;
    getContractFactory(
      name: "IUniswapV3SwapCallback",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV3SwapCallback__factory>;
    getContractFactory(
      name: "IUniswapV3Factory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV3Factory__factory>;
    getContractFactory(
      name: "IUniswapV3Pool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV3Pool__factory>;
    getContractFactory(
      name: "IUniswapV3PoolActions",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV3PoolActions__factory>;
    getContractFactory(
      name: "IUniswapV3PoolDerivedState",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV3PoolDerivedState__factory>;
    getContractFactory(
      name: "IUniswapV3PoolEvents",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV3PoolEvents__factory>;
    getContractFactory(
      name: "IUniswapV3PoolImmutables",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV3PoolImmutables__factory>;
    getContractFactory(
      name: "IUniswapV3PoolOwnerActions",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV3PoolOwnerActions__factory>;
    getContractFactory(
      name: "IUniswapV3PoolState",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV3PoolState__factory>;
    getContractFactory(
      name: "IERC721Permit",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Permit__factory>;
    getContractFactory(
      name: "INonfungiblePositionManager",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.INonfungiblePositionManager__factory>;
    getContractFactory(
      name: "IPeripheryImmutableState",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPeripheryImmutableState__factory>;
    getContractFactory(
      name: "IPeripheryPayments",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPeripheryPayments__factory>;
    getContractFactory(
      name: "IPoolInitializer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPoolInitializer__factory>;
    getContractFactory(
      name: "CommunityAllocation",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CommunityAllocation__factory>;
    getContractFactory(
      name: "CreatorAllocation",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CreatorAllocation__factory>;
    getContractFactory(
      name: "DaoPositionCreator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DaoPositionCreator__factory>;
    getContractFactory(
      name: "GenesisAllocation",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GenesisAllocation__factory>;
    getContractFactory(
      name: "MinAverageLockDuration",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MinAverageLockDuration__factory>;
    getContractFactory(
      name: "ProtocolDataAggregator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ProtocolDataAggregator__factory>;
    getContractFactory(
      name: "RewardsContract",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RewardsContract__factory>;
    getContractFactory(
      name: "EnforcedDecentralization",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EnforcedDecentralization__factory>;
    getContractFactory(
      name: "UpdateableContract",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UpdateableContract__factory>;
    getContractFactory(
      name: "Governor",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Governor__factory>;
    getContractFactory(
      name: "GovernorAlpha",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GovernorAlpha__factory>;
    getContractFactory(
      name: "TimelockInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TimelockInterface__factory>;
    getContractFactory(
      name: "VotingTokenInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VotingTokenInterface__factory>;
    getContractFactory(
      name: "GovernorAlphaWithVotingRewards",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GovernorAlphaWithVotingRewards__factory>;
    getContractFactory(
      name: "Tcp",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Tcp__factory>;
    getContractFactory(
      name: "TcpGovernorAlpha",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TcpGovernorAlpha__factory>;
    getContractFactory(
      name: "TcpTimelock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TcpTimelock__factory>;
    getContractFactory(
      name: "Timelock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Timelock__factory>;
    getContractFactory(
      name: "IAccounting",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAccounting__factory>;
    getContractFactory(
      name: "IAuctions",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAuctions__factory>;
    getContractFactory(
      name: "IEnforcedDecentralization",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IEnforcedDecentralization__factory>;
    getContractFactory(
      name: "IExecutor",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IExecutor__factory>;
    getContractFactory(
      name: "IGovernor",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IGovernor__factory>;
    getContractFactory(
      name: "IHasVotingRewards",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IHasVotingRewards__factory>;
    getContractFactory(
      name: "IHue",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IHue__factory>;
    getContractFactory(
      name: "ILendHue",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ILendHue__factory>;
    getContractFactory(
      name: "ILiquidations",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ILiquidations__factory>;
    getContractFactory(
      name: "IMarket",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMarket__factory>;
    getContractFactory(
      name: "IPositionNFT",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPositionNFT__factory>;
    getContractFactory(
      name: "IPrices",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPrices__factory>;
    getContractFactory(
      name: "IProtocolLock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IProtocolLock__factory>;
    getContractFactory(
      name: "IRates",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IRates__factory>;
    getContractFactory(
      name: "IRewards",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IRewards__factory>;
    getContractFactory(
      name: "IPriceProvider",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPriceProvider__factory>;
    getContractFactory(
      name: "ISettlement",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISettlement__factory>;
    getContractFactory(
      name: "ITCP",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ITCP__factory>;
    getContractFactory(
      name: "ITokenIncentiveMinter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ITokenIncentiveMinter__factory>;
    getContractFactory(
      name: "ITokenLockDao",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ITokenLockDao__factory>;
    getContractFactory(
      name: "IWETH9",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IWETH9__factory>;
    getContractFactory(
      name: "Auctions",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Auctions__factory>;
    getContractFactory(
      name: "Liquidations",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Liquidations__factory>;
    getContractFactory(
      name: "Market",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Market__factory>;
    getContractFactory(
      name: "ERC20Decimals",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20Decimals__factory>;
    getContractFactory(
      name: "Prices",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Prices__factory>;
    getContractFactory(
      name: "Rates",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Rates__factory>;
    getContractFactory(
      name: "Rewards",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Rewards__factory>;
    getContractFactory(
      name: "Settlement",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Settlement__factory>;
    getContractFactory(
      name: "Accounting",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Accounting__factory>;
    getContractFactory(
      name: "ITDao",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ITDao__factory>;
    getContractFactory(
      name: "ITDaoPositionNFTDescriptor",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ITDaoPositionNFTDescriptor__factory>;
    getContractFactory(
      name: "IGovernorAlpha",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IGovernorAlpha__factory>;
    getContractFactory(
      name: "IProtocolToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IProtocolToken__factory>;
    getContractFactory(
      name: "TDao",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TDao__factory>;
    getContractFactory(
      name: "TDaoGovernorAlpha",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TDaoGovernorAlpha__factory>;
    getContractFactory(
      name: "TDaoPositionNFT",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TDaoPositionNFT__factory>;
    getContractFactory(
      name: "TDaoPositionNFTDescriptor",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TDaoPositionNFTDescriptor__factory>;
    getContractFactory(
      name: "TDaoTimelock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TDaoTimelock__factory>;
    getContractFactory(
      name: "TDaoToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TDaoToken__factory>;
    getContractFactory(
      name: "TDaoVotingRewardsSafe",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TDaoVotingRewardsSafe__factory>;
    getContractFactory(
      name: "Hue",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Hue__factory>;
    getContractFactory(
      name: "HuePositionNFT",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.HuePositionNFT__factory>;
    getContractFactory(
      name: "LendHue",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LendHue__factory>;
    getContractFactory(
      name: "PositionNFT",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PositionNFT__factory>;
    getContractFactory(
      name: "ProtocolToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ProtocolToken__factory>;
    getContractFactory(
      name: "Governed",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Governed__factory>;
    getContractFactory(
      name: "LocksProtocol",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LocksProtocol__factory>;
    getContractFactory(
      name: "ProtocolLock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ProtocolLock__factory>;
    getContractFactory(
      name: "TcpSafeMath",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TcpSafeMath__factory>;
    getContractFactory(
      name: "PeriodTime",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PeriodTime__factory>;
    getContractFactory(
      name: "AccountingTestable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AccountingTestable__factory>;
    getContractFactory(
      name: "AuctionsTestable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AuctionsTestable__factory>;
    getContractFactory(
      name: "EnumerableUint128SetTestable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EnumerableUint128SetTestable__factory>;
    getContractFactory(
      name: "GovernorTestable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GovernorTestable__factory>;
    getContractFactory(
      name: "MarketTestable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MarketTestable__factory>;
    getContractFactory(
      name: "MathTestable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MathTestable__factory>;
    getContractFactory(
      name: "MockERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockERC20__factory>;
    getContractFactory(
      name: "MockGovernor",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockGovernor__factory>;
    getContractFactory(
      name: "MockTokenMinter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockTokenMinter__factory>;
    getContractFactory(
      name: "MockNftPositionManager",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockNftPositionManager__factory>;
    getContractFactory(
      name: "MockPriceAggregator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockPriceAggregator__factory>;
    getContractFactory(
      name: "MockProtocolToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockProtocolToken__factory>;
    getContractFactory(
      name: "ITDaoWithIncentiveContractMint",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ITDaoWithIncentiveContractMint__factory>;
    getContractFactory(
      name: "MockTDaoIncentiveContract",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockTDaoIncentiveContract__factory>;
    getContractFactory(
      name: "MockTokenDescriptor",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockTokenDescriptor__factory>;
    getContractFactory(
      name: "MockTokenIncentiveMinter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockTokenIncentiveMinter__factory>;
    getContractFactory(
      name: "Multicall2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Multicall2__factory>;
    getContractFactory(
      name: "PricesTestable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PricesTestable__factory>;
    getContractFactory(
      name: "RatesTestable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RatesTestable__factory>;
    getContractFactory(
      name: "RewardsTestable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RewardsTestable__factory>;
    getContractFactory(
      name: "SafeMath128Testable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SafeMath128Testable__factory>;
    getContractFactory(
      name: "SafeMath64Testable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SafeMath64Testable__factory>;
    getContractFactory(
      name: "SafeMathTestable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SafeMathTestable__factory>;
    getContractFactory(
      name: "StaleMockPriceAggregator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.StaleMockPriceAggregator__factory>;
    getContractFactory(
      name: "TcpSafeCastTestable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TcpSafeCastTestable__factory>;
    getContractFactory(
      name: "TcpSafeMathTestable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TcpSafeMathTestable__factory>;
    getContractFactory(
      name: "TDaoTestable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TDaoTestable__factory>;
    getContractFactory(
      name: "TestnetERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestnetERC20__factory>;
    getContractFactory(
      name: "TickConversion",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TickConversion__factory>;
    getContractFactory(
      name: "TimeTestable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TimeTestable__factory>;
    getContractFactory(
      name: "WETH9",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.WETH9__factory>;
    getContractFactory(
      name: "IUniswapV3FlashCallback",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV3FlashCallback__factory>;
    getContractFactory(
      name: "IUniswapV3MintCallback",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV3MintCallback__factory>;
    getContractFactory(
      name: "IUniswapV3SwapCallback",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV3SwapCallback__factory>;
    getContractFactory(
      name: "IERC20Minimal",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Minimal__factory>;
    getContractFactory(
      name: "IUniswapV3Factory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV3Factory__factory>;
    getContractFactory(
      name: "IUniswapV3Pool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV3Pool__factory>;
    getContractFactory(
      name: "IUniswapV3PoolDeployer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV3PoolDeployer__factory>;
    getContractFactory(
      name: "IUniswapV3PoolActions",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV3PoolActions__factory>;
    getContractFactory(
      name: "IUniswapV3PoolDerivedState",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV3PoolDerivedState__factory>;
    getContractFactory(
      name: "IUniswapV3PoolEvents",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV3PoolEvents__factory>;
    getContractFactory(
      name: "IUniswapV3PoolImmutables",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV3PoolImmutables__factory>;
    getContractFactory(
      name: "IUniswapV3PoolOwnerActions",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV3PoolOwnerActions__factory>;
    getContractFactory(
      name: "IUniswapV3PoolState",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV3PoolState__factory>;
    getContractFactory(
      name: "BitMathEchidnaTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BitMathEchidnaTest__factory>;
    getContractFactory(
      name: "BitMathTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BitMathTest__factory>;
    getContractFactory(
      name: "FullMathEchidnaTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FullMathEchidnaTest__factory>;
    getContractFactory(
      name: "FullMathTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FullMathTest__factory>;
    getContractFactory(
      name: "LiquidityMathTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LiquidityMathTest__factory>;
    getContractFactory(
      name: "LowGasSafeMathEchidnaTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LowGasSafeMathEchidnaTest__factory>;
    getContractFactory(
      name: "MockTimeUniswapV3Pool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockTimeUniswapV3Pool__factory>;
    getContractFactory(
      name: "MockTimeUniswapV3PoolDeployer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockTimeUniswapV3PoolDeployer__factory>;
    getContractFactory(
      name: "NoDelegateCallTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NoDelegateCallTest__factory>;
    getContractFactory(
      name: "OracleEchidnaTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OracleEchidnaTest__factory>;
    getContractFactory(
      name: "OracleTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OracleTest__factory>;
    getContractFactory(
      name: "SqrtPriceMathEchidnaTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SqrtPriceMathEchidnaTest__factory>;
    getContractFactory(
      name: "SqrtPriceMathTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SqrtPriceMathTest__factory>;
    getContractFactory(
      name: "SwapMathEchidnaTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SwapMathEchidnaTest__factory>;
    getContractFactory(
      name: "SwapMathTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SwapMathTest__factory>;
    getContractFactory(
      name: "TestERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestERC20__factory>;
    getContractFactory(
      name: "TestUniswapV3Callee",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestUniswapV3Callee__factory>;
    getContractFactory(
      name: "TestUniswapV3ReentrantCallee",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestUniswapV3ReentrantCallee__factory>;
    getContractFactory(
      name: "TestUniswapV3Router",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestUniswapV3Router__factory>;
    getContractFactory(
      name: "TestUniswapV3SwapPay",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestUniswapV3SwapPay__factory>;
    getContractFactory(
      name: "TickBitmapEchidnaTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TickBitmapEchidnaTest__factory>;
    getContractFactory(
      name: "TickBitmapTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TickBitmapTest__factory>;
    getContractFactory(
      name: "TickEchidnaTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TickEchidnaTest__factory>;
    getContractFactory(
      name: "TickMathEchidnaTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TickMathEchidnaTest__factory>;
    getContractFactory(
      name: "TickMathTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TickMathTest__factory>;
    getContractFactory(
      name: "TickOverflowSafetyEchidnaTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TickOverflowSafetyEchidnaTest__factory>;
    getContractFactory(
      name: "TickTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TickTest__factory>;
    getContractFactory(
      name: "UniswapV3PoolSwapTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UniswapV3PoolSwapTest__factory>;
    getContractFactory(
      name: "UnsafeMathEchidnaTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UnsafeMathEchidnaTest__factory>;
    getContractFactory(
      name: "UniswapV3Factory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UniswapV3Factory__factory>;
    getContractFactory(
      name: "UniswapV3Pool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UniswapV3Pool__factory>;
    getContractFactory(
      name: "UniswapV3PoolDeployer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UniswapV3PoolDeployer__factory>;
    getContractFactory(
      name: "ERC721Permit",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721Permit__factory>;
    getContractFactory(
      name: "LiquidityManagement",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LiquidityManagement__factory>;
    getContractFactory(
      name: "Multicall",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Multicall__factory>;
    getContractFactory(
      name: "PeripheryImmutableState",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PeripheryImmutableState__factory>;
    getContractFactory(
      name: "PeripheryPayments",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PeripheryPayments__factory>;
    getContractFactory(
      name: "PeripheryPaymentsWithFee",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PeripheryPaymentsWithFee__factory>;
    getContractFactory(
      name: "PoolInitializer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PoolInitializer__factory>;
    getContractFactory(
      name: "SelfPermit",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SelfPermit__factory>;
    getContractFactory(
      name: "IERC1271",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1271__factory>;
    getContractFactory(
      name: "IERC20PermitAllowed",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20PermitAllowed__factory>;
    getContractFactory(
      name: "IWETH9",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IWETH9__factory>;
    getContractFactory(
      name: "IERC20Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Metadata__factory>;
    getContractFactory(
      name: "IERC721Permit",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Permit__factory>;
    getContractFactory(
      name: "IMulticall",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMulticall__factory>;
    getContractFactory(
      name: "INonfungiblePositionManager",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.INonfungiblePositionManager__factory>;
    getContractFactory(
      name: "INonfungibleTokenPositionDescriptor",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.INonfungibleTokenPositionDescriptor__factory>;
    getContractFactory(
      name: "IPeripheryImmutableState",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPeripheryImmutableState__factory>;
    getContractFactory(
      name: "IPeripheryPayments",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPeripheryPayments__factory>;
    getContractFactory(
      name: "IPeripheryPaymentsWithFee",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPeripheryPaymentsWithFee__factory>;
    getContractFactory(
      name: "IPoolInitializer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPoolInitializer__factory>;
    getContractFactory(
      name: "IQuoter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IQuoter__factory>;
    getContractFactory(
      name: "IQuoterV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IQuoterV2__factory>;
    getContractFactory(
      name: "ISelfPermit",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISelfPermit__factory>;
    getContractFactory(
      name: "ISwapRouter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISwapRouter__factory>;
    getContractFactory(
      name: "ITickLens",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ITickLens__factory>;
    getContractFactory(
      name: "IV3Migrator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IV3Migrator__factory>;
    getContractFactory(
      name: "Quoter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Quoter__factory>;
    getContractFactory(
      name: "QuoterV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.QuoterV2__factory>;
    getContractFactory(
      name: "TickLens",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TickLens__factory>;
    getContractFactory(
      name: "UniswapInterfaceMulticall",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UniswapInterfaceMulticall__factory>;
    getContractFactory(
      name: "NFTDescriptor",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NFTDescriptor__factory>;
    getContractFactory(
      name: "NonfungiblePositionManager",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NonfungiblePositionManager__factory>;
    getContractFactory(
      name: "NonfungibleTokenPositionDescriptor",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NonfungibleTokenPositionDescriptor__factory>;
    getContractFactory(
      name: "SwapRouter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SwapRouter__factory>;
    getContractFactory(
      name: "Base64Test",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Base64Test__factory>;
    getContractFactory(
      name: "LiquidityAmountsTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LiquidityAmountsTest__factory>;
    getContractFactory(
      name: "MockObservable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockObservable__factory>;
    getContractFactory(
      name: "MockTimeNonfungiblePositionManager",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockTimeNonfungiblePositionManager__factory>;
    getContractFactory(
      name: "MockTimeSwapRouter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockTimeSwapRouter__factory>;
    getContractFactory(
      name: "NFTDescriptorTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NFTDescriptorTest__factory>;
    getContractFactory(
      name: "NonfungiblePositionManagerPositionsGasTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NonfungiblePositionManagerPositionsGasTest__factory>;
    getContractFactory(
      name: "OracleTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OracleTest__factory>;
    getContractFactory(
      name: "PathTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PathTest__factory>;
    getContractFactory(
      name: "PeripheryImmutableStateTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PeripheryImmutableStateTest__factory>;
    getContractFactory(
      name: "PoolAddressTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PoolAddressTest__factory>;
    getContractFactory(
      name: "PoolTicksCounterTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PoolTicksCounterTest__factory>;
    getContractFactory(
      name: "SelfPermitTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SelfPermitTest__factory>;
    getContractFactory(
      name: "TestCallbackValidation",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestCallbackValidation__factory>;
    getContractFactory(
      name: "TestERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestERC20__factory>;
    getContractFactory(
      name: "TestERC20Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestERC20Metadata__factory>;
    getContractFactory(
      name: "TestERC20PermitAllowed",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestERC20PermitAllowed__factory>;
    getContractFactory(
      name: "TestMulticall",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestMulticall__factory>;
    getContractFactory(
      name: "TestPositionNFTOwner",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestPositionNFTOwner__factory>;
    getContractFactory(
      name: "TestUniswapV3Callee",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestUniswapV3Callee__factory>;
    getContractFactory(
      name: "TickLensTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TickLensTest__factory>;
    getContractFactory(
      name: "WeightedOracleTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.WeightedOracleTest__factory>;
    getContractFactory(
      name: "V3Migrator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.V3Migrator__factory>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
  }
}
