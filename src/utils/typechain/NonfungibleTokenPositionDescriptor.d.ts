/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface NonfungibleTokenPositionDescriptorInterface
  extends ethers.utils.Interface {
  functions: {
    "WETH9()": FunctionFragment;
    "flipRatio(address,address,uint256)": FunctionFragment;
    "tokenRatioPriority(address,uint256)": FunctionFragment;
    "tokenURI(address,uint256)": FunctionFragment;
  };

  encodeFunctionData(functionFragment: "WETH9", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "flipRatio",
    values: [string, string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "tokenRatioPriority",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "tokenURI",
    values: [string, BigNumberish]
  ): string;

  decodeFunctionResult(functionFragment: "WETH9", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "flipRatio", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "tokenRatioPriority",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "tokenURI", data: BytesLike): Result;

  events: {};
}

export class NonfungibleTokenPositionDescriptor extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: NonfungibleTokenPositionDescriptorInterface;

  functions: {
    WETH9(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    "WETH9()"(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    flipRatio(
      token0: string,
      token1: string,
      chainId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: boolean;
    }>;

    "flipRatio(address,address,uint256)"(
      token0: string,
      token1: string,
      chainId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: boolean;
    }>;

    tokenRatioPriority(
      token: string,
      chainId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    "tokenRatioPriority(address,uint256)"(
      token: string,
      chainId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    tokenURI(
      positionManager: string,
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    "tokenURI(address,uint256)"(
      positionManager: string,
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;
  };

  WETH9(overrides?: CallOverrides): Promise<string>;

  "WETH9()"(overrides?: CallOverrides): Promise<string>;

  flipRatio(
    token0: string,
    token1: string,
    chainId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<boolean>;

  "flipRatio(address,address,uint256)"(
    token0: string,
    token1: string,
    chainId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<boolean>;

  tokenRatioPriority(
    token: string,
    chainId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "tokenRatioPriority(address,uint256)"(
    token: string,
    chainId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  tokenURI(
    positionManager: string,
    tokenId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  "tokenURI(address,uint256)"(
    positionManager: string,
    tokenId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  callStatic: {
    WETH9(overrides?: CallOverrides): Promise<string>;

    "WETH9()"(overrides?: CallOverrides): Promise<string>;

    flipRatio(
      token0: string,
      token1: string,
      chainId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "flipRatio(address,address,uint256)"(
      token0: string,
      token1: string,
      chainId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    tokenRatioPriority(
      token: string,
      chainId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "tokenRatioPriority(address,uint256)"(
      token: string,
      chainId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    tokenURI(
      positionManager: string,
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    "tokenURI(address,uint256)"(
      positionManager: string,
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;
  };

  filters: {};

  estimateGas: {
    WETH9(overrides?: CallOverrides): Promise<BigNumber>;

    "WETH9()"(overrides?: CallOverrides): Promise<BigNumber>;

    flipRatio(
      token0: string,
      token1: string,
      chainId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "flipRatio(address,address,uint256)"(
      token0: string,
      token1: string,
      chainId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    tokenRatioPriority(
      token: string,
      chainId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "tokenRatioPriority(address,uint256)"(
      token: string,
      chainId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    tokenURI(
      positionManager: string,
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "tokenURI(address,uint256)"(
      positionManager: string,
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    WETH9(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "WETH9()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    flipRatio(
      token0: string,
      token1: string,
      chainId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "flipRatio(address,address,uint256)"(
      token0: string,
      token1: string,
      chainId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    tokenRatioPriority(
      token: string,
      chainId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "tokenRatioPriority(address,uint256)"(
      token: string,
      chainId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    tokenURI(
      positionManager: string,
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "tokenURI(address,uint256)"(
      positionManager: string,
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
